## @file
#  Device path driver that produces three UEFI device path protocols.
#
#  This driver produces Device Path Utilities protocol and optionally
#  DevicePahtToText and DevicePathFromText protocols based on feature flags
#  PcdDevicePathSupportDevicePathToText & PcdDevicePathSupportDevicePathFromText
#  respectively.
#
#  Copyright (c) 2006 - 2014, Intel Corporation. All rights reserved.<BR>
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = DevicePathDxe
  FILE_GUID                  = 9B680FCE-AD6B-4F3A-B60B-F59899003443
  MODULE_TYPE                = DXE_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = DevicePathEntryPoint
  MODULE_UNI_FILE            = DevicePathDxe.uni

[Packages.X64]
  MdePkg/MdePkg.dec

[Binaries.X64]
  PE32|DevicePathDxe.efi
  DXE_DEPEX|DevicePathDxe.depex

[PatchPcd.X64]

[Protocols.X64]
  ## SOMETIMES_PRODUCES
  gEfiDevicePathToTextProtocolGuid

  ## SOMETIMES_PRODUCES
  gEfiDevicePathFromTextProtocolGuid

  ## PRODUCES
  gEfiDevicePathUtilitiesProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiDevicePathProtocolGuid

  ## UNDEFINED
  gEfiDebugPortProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.X64]

[Guids.X64]
  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVTUTF8Guid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVT100Guid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVT100PlusGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiPcAnsiGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiUartDevicePathGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiSasDevicePathGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVirtualDiskGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiVirtualCdGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiPersistentVirtualDiskGuid

  ## SOMETIMES_CONSUMES  ## GUID
  gEfiPersistentVirtualCdGuid


[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  MdePkg/Library/UefiMemoryAllocationLib/UefiMemoryAllocationLib.inf
#  MdePkg/Library/UefiDevicePathLib/UefiDevicePathLib.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf

[Depex.X64]
#  (TRUE) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)

#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC
#

[BuildOptions.X64]
## @AsBuilt
##   GCC:RELEASE_GCC49_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:RELEASE_GCC49_X64_ASLDLINK_FLAGS = -nostdlib -n -q --gc-sections --script=$(EDK_TOOLS_PATH)/Scripts/gcc4.9-ld-script --entry ReferenceAcpiTable -u ReferenceAcpiTable -m elf_x86_64
##   GCC:RELEASE_GCC49_X64_VFR_FLAGS = -l -n
##   GCC:RELEASE_GCC49_X64_PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:RELEASE_GCC49_X64_GENFW_FLAGS = 
##   GCC:RELEASE_GCC49_X64_OPTROM_FLAGS = -e
##   GCC:RELEASE_GCC49_X64_RC_FLAGS = -I binary -O elf64-x86-64        -B i386    --rename-section .data=.hii
##   GCC:RELEASE_GCC49_X64_ASM_FLAGS = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h -m64
##   GCC:RELEASE_GCC49_X64_ASL_FLAGS = 
##   GCC:RELEASE_GCC49_X64_CC_FLAGS = -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -c -include AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -m64 -fno-stack-protector "-DEFIAPI=__attribute__((ms_abi))" -DNO_BUILTIN_VA_FUNCS -mno-red-zone -Wno-address -mcmodel=large -Wno-address -Wno-unused-but-set-variable -D DISABLE_NEW_DEPRECATED_INTERFACES
##   GCC:RELEASE_GCC49_X64_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:RELEASE_GCC49_X64_ASLCC_FLAGS = -x c -m64
##   GCC:RELEASE_GCC49_X64_DLINK_FLAGS = -nostdlib -n -q --gc-sections --script=$(EDK_TOOLS_PATH)/Scripts/gcc4.9-ld-script --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map  -melf_x86_64 --oformat=elf64-x86-64
##   GCC:RELEASE_GCC49_X64_NASMB_FLAGS = -f bin
##   GCC:RELEASE_GCC49_X64_ASLPP_FLAGS = -x c -E -P
##   GCC:RELEASE_GCC49_X64_OBJCOPY_FLAGS = 
##   GCC:RELEASE_GCC49_X64_APP_FLAGS = 
##   GCC:RELEASE_GCC49_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:RELEASE_GCC49_X64_NASM_FLAGS = -f elf64
